// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Guild {
  guildId              String                 @id
  levelUpMessage       String?
  levelRoleMessage     String?
  levelUpChannelId     String?
  GuildUser            GuildUser[]
  LevelRole            LevelRole[]
  EventSubmissionEmbed EventSubmissionSetup[]
  ModelMakerSetup      ModelMakerSetup[]
}

model GuildUser {
  userId     String
  level      Int        @default(1)
  experience Int        @default(0)
  guildId    String
  guild      Guild      @relation(references: [guildId], fields: [guildId])
  TempRole   TempRole[]

  @@id([userId, guildId])
}

model LevelRole {
  id      Int    @id @default(autoincrement())
  guildId String
  guild   Guild  @relation(references: [guildId], fields: [guildId])
  roleId  String
  level   Int

  @@unique([guildId, level])
}

model TempRole {
  id        Int       @id @default(autoincrement())
  guildId   String
  userId    String
  guildUser GuildUser @relation(references: [guildId, userId], fields: [guildId, userId])
  roleId    String
  endsAt    BigInt

  @@unique([userId, roleId])
}

model EventSubmissionSetup {
  id                  Int               @id @default(autoincrement())
  title               String            @db.VarChar(200)
  description         String?           @db.VarChar(2000)
  submissionChannelId String            @db.VarChar(50)
  eventEndTimestamp   String?           @db.VarChar(50)
  embedColor          String?           @db.VarChar(10)
  guildId             String
  guild               Guild             @relation(references: [guildId], fields: [guildId])
  maxSubmissions      Int?
  EventSubmission     EventSubmission[]
}

model EventSubmission {
  id                     Int                  @id @default(autoincrement())
  eventSubmissionSetupId Int
  eventSubmissionSetup   EventSubmissionSetup @relation(references: [id], fields: [eventSubmissionSetupId])
  description            String?              @db.VarChar(1000)
  submissionLink         String?              @db.VarChar(1000)
  userId                 String
  channelId              String
  messageId              String
}

model MessageCountChannel {
  id           String         @id
  MessageCount MessageCount[]
}

model MessageCount {
  userId                String              @id
  count                 Int                 @default(0)
  messageCountChannelId String
  MessageCountChannel   MessageCountChannel @relation(fields: [messageCountChannelId], references: [id])
}

model ModelMakerSetup {
  guildId      String @id
  guild        Guild  @relation(fields: [guildId], references: [guildId])
  logChannel   String
  roleToAssign String
  guidelines   String @db.VarChar(4000)
}

model ModelMakerSubmission {
  id         Int      @id @default(autoincrement())
  userId     String
  guildId    String?
  technology String?
  extraction String?
  modelName  String?
  epochs     Int?
  modelLink  String?  @db.VarChar(1000)
  notes      String?  @db.VarChar(1000)
  startedAt  DateTime
  submitted  Boolean?
}
